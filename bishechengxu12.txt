package com.entity;

public class Bottomchukudata {
	private String cktime;
	private String ckperson;
	private String bono;
	private String amount;
	private String boname;
	
	public Bottomchukudata(String cktime,String ckperson,String bono,String amount,String boname){
		super();
		this.cktime=cktime;
		this.ckperson=ckperson;
		this.bono=bono;
		this.amount=amount;
		this.boname=boname;
	}
	
	public Bottomchukudata(){
		super();
	}

	public String getCktime() {
		return cktime;
	}

	public void setCktime(String cktime) {
		this.cktime = cktime;
	}

	public String getCkperson() {
		return ckperson;
	}

	public void setCkperson(String ckperson) {
		this.ckperson = ckperson;
	}

	public String getBono() {
		return bono;
	}

	public void setBono(String bono) {
		this.bono = bono;
	}

	public String getAmount() {
		return amount;
	}

	public void setAmount(String amount) {
		this.amount = amount;
	}

	public String getBoname() {
		return boname;
	}

	public void setBoname(String boname) {
		this.boname = boname;
	}

	@Override
	public String toString() {
		return "Bottom_view_chuku [cktime=" + cktime + ", ckperson=" + ckperson
				+ ", bono=" + bono + ", amount=" + amount + ", boname="
				+ boname + "]";
	}

}

package com.dao.show;

import java.sql.SQLException;
import java.util.List;

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.handlers.BeanListHandler;

import com.entity.Bottomchukudata;
import com.util.JdbcUtil;

public class ShowBottomchukuDaoImpl implements ShowBottomchukuDao {

	public List<Bottomchukudata> showData(String tablename) {
		try {
			QueryRunner qr = new QueryRunner(JdbcUtil.getDataSource());
			String sql = "SELECT * FROM "+tablename+" ";
			return (List<Bottomchukudata>)qr.query(sql, new BeanListHandler(Bottomchukudata.class));
		} catch (SQLException e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		}
	}

}

package com.service.show;

import java.util.List;

import com.dao.show.ShowBottomchukuDao;
import com.dao.show.ShowBottomchukuDaoImpl;
import com.entity.Bottomchukudata;


public class ShowBottomchukuServiceImpl implements ShowBottomchukuService {

	ShowBottomchukuDao dao = new ShowBottomchukuDaoImpl();
	public List<Bottomchukudata> showData(String tablename) {	
		System.out.println(dao.showData(tablename));
		return dao.showData(tablename);
	}

}

package com.web.show;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.entity.Bottomchukudata;
import com.entity.Bottomrukudata;
import com.service.show.ShowBottomchukuService;
import com.service.show.ShowBottomchukuServiceImpl;
import com.service.show.ShowBottomrukuService;
import com.service.show.ShowBottomrukuServiceImpl;

public class ShowBottomchukuServlet extends HttpServlet {
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		request.setCharacterEncoding("utf-8");
		// 数据封装
	
		
		//将用户输入的数据封装到aquery
		//aquery = WebUtil.copyRequestToBean(request, AdminQuery.class);
		// 请求头用于防止非法链接
		String referer = request.getHeader("referer");
		String tablename = request.getParameter("tablename");
		
		// 获取用输入的数据
		String currentPage = request.getParameter("currentPage");
		if (currentPage == null || currentPage.equals("")) {
			// 如果用户第一次访问，没有传递currentPage参数，则当前页为1
			currentPage = "1";
		}

		String pageSize = request.getParameter("pageSize");
		if (pageSize == null || pageSize.equals("")) {
			pageSize = "5";
		}
		ShowBottomchukuService service = new ShowBottomchukuServiceImpl();
		List<Bottomchukudata> boclist = service.showData(tablename);
		System.out.println(boclist);
		//request.setAttribute("pageBean", pageBean);
		request.setAttribute("boclist", boclist);
		request.getRequestDispatcher("/jsp/bottomchuku.jsp").forward(request, response);	

			
	}

	

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);

	}

}

 <%@page language="java" import="java.util.*" pageEncoding="utf-8" %>
<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>信息查看 </title>
<h1 align="center">查看信息</h1>
</head>
 <style type="text/css">

         .clear5{color:blue;
        }
          .clear1{color:red;
        }
           .clear2{color:green;
        }
           .clear3{color:purple;
        }
           .clear4{color:black;
        }
    </style>	
<body background="D:\code\Work\WebRoot\jsp\weimei_de_qiumo_tianye-005.jpg">
<form id="queryForm" action="${pageContext.request.contextPath }/ShowBottomchukuServlet?tablename=bottom_view_chuku" method="post">
 		<%--当前页 --%>
  		<input type="hidden" id="currentPage" name="currentPage" value="${pageBean.currentPage }"/>
  		<%--每页显示记录数 --%>
  		<input type="hidden" id="pageSizeId" name="pageSize" value="${pageBean.pageSize }"/>

  </form>
	<table>
		<table border="1" align="center" width="1000px" cellspacing ="0">
		<tr>
		    <th class="clear1">时间</th>
    	 	<th class="clear2">使用人</th>
			<th class="clear3">分段号</th>
    	 	<th class="clear4">数量</th>
    	 	<th class="clear5">名称</th>
    	 	
    	 </tr>
    	  <c:forEach items="${boclist}" var="Bottomchukudata">
    	  <tr>
    	    <td  align="center" >${Bottomchukudata.cktime}</td>
    	 	<td  align="center" >${Bottomchukudata.ckperson}</td>
    	  	<td  align="center" >${Bottomchukudata.bono}</td>
    	 	<td  align="center" >${Bottomchukudata.amount}</td>
    	 	<td  align="center" >${Bottomchukudata.boname}</td>
   
    	 </tr>
    	 </c:forEach>
    	 <tr>
    	 	<td align="center" colspan="10">
    	 	<%--
    	 	需求： 
    	 		1） 如果当前页是首页，那么不能点击 首页 和 上一页，否则可以点击
    	 		2) 如果当前页是末页，那么不能点击 下一页 和 末页，否则可以点击
    	 	 --%>
    	 	 <c:choose>
    	 	 	<c:when test="${pageBean.totalPage==0}">
    	 	 		
    	 	 		首页&nbsp;上一页下一页&nbsp;末页
    	 	 	</c:when>
    	 	 	<c:otherwise>
    	 	 		 <c:choose>
	    	 	 	<c:when test="${pageBean.currentPage==pageBean.firstPage}">
	    	 	 		首页&nbsp;
	    	 	 		上一页
	    	 	 	</c:when>
	    	 	 	<c:otherwise>
	    	 			<a href="javascript:void(0)" onclick="toPage('${pageBean.firstPage}')">首页</a>&nbsp;
	    	 			<a href="javascript:void(0)" onclick="toPage('${pageBean.prePage}')">上一页</a>&nbsp;
	    	 	 	</c:otherwise>
	    	 	 </c:choose>
	    	 	 
	    	 	 <c:choose>
	    	 	 	<c:when test="${pageBean.currentPage==pageBean.totalPage}">
	    	 	 		下一页&nbsp;
	    	 	 		末页
	    	 	 	</c:when>
	    	 	 	<c:otherwise>
	
	    	 			<a href="javascript:void(0)" onclick="toPage('${pageBean.nextPage}')">下一页</a>&nbsp;
	    	 			<a href="javascript:void(0)" onclick="toPage('${pageBean.totalPage}')">末页</a>&nbsp;
	    	 			
	    	 	 	</c:otherwise>
	    	 	 </c:choose>
    	 	 	</c:otherwise>
    	 	 </c:choose>
    	 		当前为第${pageBean.currentPage}页/共${pageBean.totalPage }页&nbsp;
    	 		共${pageBean.totalCount}条数据&nbsp;
    	 		每页显示 <input type="text" size="2" id="pageSize" value="${pageBean.pageSize}" onblur="changePageSize()"/> 条&nbsp;
    	 		跳转到第<input type="text" id="curPage" size="2" onblur="changePage()"/>页
    	 		<input type="submit" >
    	 	</td>
    	 </tr>
		</table>
</body>

 <script type="text/javascript">
  	/*改变每页显示记录数*/
  	function changePageSize(){
  		//1.得到用户输入
  		var pageSize = document.getElementById("pageSize").value;
  		//判断规则：只能输入1-2个的数字
  		var reg = /^[1-9][0-9]?$/;
  		if(!reg.test(pageSize)){
  			alert("只能输入1-2位的数字");
  			return;
  		}
  		//2.请求ListEmpServlet，同时发送参数(pageSize)
  		/*var url = "${pageContext.request.contextPath}/AdminServlet?action=showFarmer&pageSize="+pageSize;
  		window.location.href=url;*/
  		//提交表单,同时发送参数(pageSize)
  		document.getElementById("pageSizeId").value=pageSize;
  		var queryForm = document.getElementById("queryForm");
  		queryForm.submit();//提交表单
  	}
  	
  	/*跳转页面*/
  	function changePage(){
  		var curPage = document.getElementById("curPage").value;
  		var reg = /^[1-9][0-9]?$/;
  		if(!reg.test(curPage)){
  			alert("只能输入1-2位的非零数字");
  			return;
  		}
  		/*如果输入的页码大于等于总页数*/
  		var totalPage = "${pageBean.totalPage}";
  		if(curPage>totalPage){
  			alert("已经超过总页数");
  			return;
  		}
  		
  		/*var url = "${pageContext.request.contextPath}/AdminServlet?action=showFarmer&currentPage="+curPage+"&pageSize=${pageBean.pageSize}";
  		window.location.href=url;*/
  		document.getElementById("currentPage").value=curPage;
  		var queryForm = document.getElementById("queryForm");
  		queryForm.submit();//提交表单
  	}
  	
  //提交查询表单
  	function toPage(pageNo){
  		//提交之前，把当前页设置跳转到页码
  		 document.getElementById("currentPage").value = pageNo;
  		//提交表单
  		var queryForm = document.getElementById("queryForm");
  		queryForm.submit();
  	}
  
 </script>
</html>
